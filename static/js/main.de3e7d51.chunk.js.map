{"version":3,"sources":["utils/omitBy.ts","consts.ts","components/Notes.tsx","components/Settings/Filter.tsx","components/Settings/Timer.tsx","components/Settings/Count.tsx","components/Settings/index.tsx","utils/shuffle.ts","utils/noteHelpers.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["omitBy","arr","ignores","filter","a","every","b","NOTE_COLORS","A","B","C","D","E","F","G","NOTE_FILTERS","label","value","NATURAL_NOTES","SHARP_NOTES","map","note","FLAT_NOTES","INVERSION_GROUPS","CIRCLE_OF_FIFTHS","CIRCLE_OF_FIFTHS_FLATS","CIRCLE_OF_FIFTHS_SHARPS","Notes","notes","className","index","color","key","text","Note","textColor","wrapperClasses","style","flexBasis","Filter","onChange","TextField","id","select","MenuItem","Timer","inputRef","useRef","useState","setValue","handleChange","useCallback","ev","num","parseInt","target","newVal","handleBlur","val","Number","isFinite","ref","size","type","onBlur","Count","max","lastValidValue","newValue","current","Settings","memo","count","setTimerDelay","setCount","setFilter","changeNotes","maxNoteCount","handleDelayChange","timerDelay","parseDelay","handleCountChange","handleFilterChange","shuffle","m","length","i","Math","floor","random","getOctaveSet","flats","sharps","minors","n","getRandomSet","useFlats","getFifthsSet","getNoteSet","flatMap","set","getNotes","slice","App","windowSize","useWindowSize","setNotes","overrides","handleTap","useInterval","height","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de3e7d51.chunk.js","sourcesContent":["export const omitBy = (arr: string[], ignores: string[]) =>\n  arr.filter((a) => ignores.every((b) => a !== b));\n","import { omitBy } from './utils/omitBy';\n\nexport type NoteLetter = 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G';\nexport type NoteMod = '♯' | '♭';\nexport type ChordMod = 'M' | 'm'; // TODO: sus, diminished etc - could use –+Δo7 etc\n\nexport type NoteSetFilter =\n  | 'any'\n  | 'any-add-minor'\n  | 'naturals'\n  | 'sharps'\n  | 'flats'\n  | 'inversions'\n  | 'fifths'\n  | 'fifths-flats'\n  | 'fifths-sharps';\n\nexport const DEFAULT_NOTES_COUNT = 12;\nexport const NATURAL_NOTES_COUNT = 7;\nexport const MAX_NOTES_COUNT = 12;\n\nexport const DEFAULT_NOTES_FILTER: NoteSetFilter = 'any';\n\nexport const TIMER_MAX_SECONDS = 60;\n\nexport const NOTE_COLORS = {\n  A: 'blue',\n  B: 'purple',\n  C: 'red',\n  D: 'yellow',\n  E: 'orange',\n  F: 'green',\n  G: 'teal',\n} as const;\n\nexport const NOTE_FILTERS: { label: string; value: NoteSetFilter }[] = [\n  { label: 'Any', value: 'any' },\n  { label: 'Any + Minor', value: 'any-add-minor' },\n  { label: 'Naturals Only', value: 'naturals' },\n  { label: 'Naturals + Flats', value: 'flats' },\n  { label: 'Naturals + Sharps', value: 'sharps' },\n  { label: 'Inversion Groups', value: 'inversions' },\n  { label: 'Fifths', value: 'fifths' },\n  // { label: 'Fifths (Flats)', value: 'fifths-flats' },\n  // { label: 'Fifths (Sharps)', value: 'fifths-sharps' },\n];\n\nexport const NATURAL_NOTES: NoteLetter[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\nexport const SHARP_NOTES = omitBy(NATURAL_NOTES, ['B', 'E']).map((note) => note + '♯');\nexport const FLAT_NOTES = omitBy(NATURAL_NOTES, ['C', 'F']).map((note) => note + '♭');\n\nexport const INVERSION_GROUPS = [\n  ['C', 'F', 'G'],\n  ['A', 'D', 'E'],\n  ['Ab', 'Db', 'Eb'],\n  ['B', 'Bb', 'Gb'],\n];\n\nexport const CIRCLE_OF_FIFTHS = ['C', 'F', 'Bb', 'Eb', 'Ab', 'Db', 'Gb', 'B', 'E', 'A', 'D', 'G'];\n/* Are these all Major? */\n/* Are these actually in the right order ?*/\nexport const CIRCLE_OF_FIFTHS_FLATS = ['C', 'F', 'Bb', 'Eb', 'Ab', 'Db', 'Gb', 'Cb'];\nexport const CIRCLE_OF_FIFTHS_SHARPS = ['C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#'];\n","import React, { FC } from 'react';\n\nimport { NOTE_COLORS, NoteLetter } from '../consts';\n\nexport const Notes: FC<{ notes: string[] }> = ({ notes = [] }) => {\n  return (\n    <div className=\"flex flex-wrap items-center content-center justify-center gap-4\">\n      {notes.map((note, index) => {\n        const color = NOTE_COLORS[note[0] as NoteLetter];\n        return <Note key={note + index} color={color} text={note} />;\n      })}\n    </div>\n  );\n};\n\nexport const Note: FC<{\n  color: string;\n  text: string;\n}> = ({ text, color }) => {\n  const textColor = `text-${color}-400`;\n  const wrapperClasses = `inline-flex content-center justify-center text-auto-size ${textColor}`;\n  const wrapperStyle = { flexBasis: '10vw' };\n\n  return (\n    <div className={wrapperClasses} style={wrapperStyle}>\n      {text}\n    </div>\n  );\n};\n","import React, { ChangeEventHandler, FC } from 'react';\nimport { MenuItem, TextField } from '@material-ui/core';\n\nimport { NOTE_FILTERS, NoteSetFilter } from '../../consts';\n\nexport const Filter: FC<{\n  value: NoteSetFilter;\n  onChange: ChangeEventHandler;\n}> = ({ value, onChange }) => (\n  <TextField\n    id=\"note-filter\"\n    className=\"px-1\"\n    label=\"Display\"\n    select\n    value={value}\n    onChange={onChange}\n  >\n    {NOTE_FILTERS.map((filter) => (\n      <MenuItem key={filter.value} value={filter.value}>\n        {filter.label}\n      </MenuItem>\n    ))}\n  </TextField>\n);\n","import React, { ChangeEventHandler, FC, useRef, useState, useCallback } from 'react';\nimport { TextField } from '@material-ui/core';\n\nimport { TIMER_MAX_SECONDS } from '../../consts';\n\nexport const Timer: FC<{\n  onChange: ChangeEventHandler;\n}> = ({ onChange }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  // track input val internally (but still broadcast change)\n  // otherwise we can get stuck with a `0` on mobile\n  // that cannot be deleted for fresh input due\n  // to null being used as delay value for useInterval\n  const [value, setValue] = useState('0');\n\n  const handleChange = useCallback(\n    (ev) => {\n      const num = parseInt(ev.target.value);\n      let newVal = ev.target.value;\n\n      if (num < 0) {\n        newVal = '0';\n      } else if (num > TIMER_MAX_SECONDS) {\n        newVal = `${TIMER_MAX_SECONDS}`;\n      }\n\n      setValue(newVal);\n      onChange(ev);\n    },\n    [onChange, setValue]\n  );\n\n  const handleBlur = useCallback(\n    (ev) => {\n      const val = ev.target.value;\n      const num = parseInt(val);\n\n      // empty input, reset to 0\n      if (!Number.isFinite(num)) {\n        setValue('0');\n      } else {\n        setValue(val);\n      }\n\n      onChange(ev);\n    },\n    [onChange, setValue]\n  );\n\n  return (\n    <>\n      <TextField\n        id=\"note-timer\"\n        className=\"w-16 px-1\"\n        ref={inputRef}\n        label=\"Timer\"\n        size=\"small\"\n        type=\"number\"\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n    </>\n  );\n};\n","import React, { ChangeEventHandler, FC, useCallback, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { DEFAULT_NOTES_COUNT } from '../../consts';\n\nexport const Count: FC<{\n  value: number;\n  max: number;\n  onChange: ChangeEventHandler;\n}> = ({ value, max, onChange }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lastValidValue = useRef(DEFAULT_NOTES_COUNT);\n\n  const handleChange = useCallback(\n    (ev) => {\n      let newValue = ev.target.value;\n      const num = parseInt(ev.target.value);\n\n      if (num <= 0) {\n        newValue = '1';\n      } else if (num > max) {\n        newValue = `${max}`;\n      }\n\n      // hold onto last valid value for reset in blur\n      if (Number.isFinite(num)) {\n        lastValidValue.current = newValue;\n      }\n\n      // update displayed value regardless\n      ev.target.value = newValue;\n      onChange(ev);\n    },\n    [max, onChange]\n  );\n\n  const handleBlur = useCallback(\n    (ev) => {\n      // input empty/invalid, reset to last valid value\n      if (!Number.isFinite(ev.target.value)) {\n        ev.target.value = lastValidValue.current;\n      }\n\n      onChange(ev);\n    },\n    [onChange]\n  );\n\n  return (\n    <TextField\n      id=\"note-count\"\n      className=\"w-10 px-1\"\n      ref={inputRef}\n      label=\"Count\"\n      type=\"number\"\n      value={value}\n      size=\"small\"\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n","import React, { useCallback, Dispatch, SetStateAction, FC, memo } from 'react';\n\nimport { NATURAL_NOTES_COUNT, MAX_NOTES_COUNT, NoteSetFilter } from '../../consts';\n\nimport { Filter } from './Filter';\nimport { Timer } from './Timer';\nimport { Count } from './Count';\n\n// seconds -> ms | null\nconst parseDelay = (timerDelay: string): number | null => {\n  const val = parseInt(timerDelay);\n  const shouldReset = !Number.isFinite(val) || val <= 0;\n  return shouldReset ? null : val * 1000;\n};\n\nexport const Settings: FC<{\n  filter: NoteSetFilter;\n  count: number;\n  setTimerDelay: Dispatch<SetStateAction<number | null>>;\n  setCount: Dispatch<SetStateAction<number>>;\n  setFilter: Dispatch<SetStateAction<NoteSetFilter>>;\n  changeNotes: (overrides?: { filter?: number; count?: number }) => void;\n}> = memo(({ filter, count, setTimerDelay, setCount, setFilter, changeNotes }) => {\n  const maxNoteCount = filter === 'naturals' ? NATURAL_NOTES_COUNT : MAX_NOTES_COUNT;\n\n  const handleDelayChange = useCallback(\n    ({ target }) => {\n      setTimerDelay(parseDelay(target.value));\n    },\n    [setTimerDelay]\n  );\n\n  const handleCountChange = useCallback(\n    ({ target }) => {\n      const count = target.value;\n      setCount(count);\n      changeNotes({ count });\n    },\n    [setCount, changeNotes]\n  );\n\n  const handleFilterChange = useCallback(\n    ({ target }) => {\n      const filter = target.value;\n      setFilter(filter);\n      changeNotes({ filter });\n    },\n    [setFilter, changeNotes]\n  );\n\n  return (\n    <>\n      <div className=\"flex justify-center mb-4 md:justify-start\">\n        <Filter value={filter} onChange={handleFilterChange} />\n      </div>\n      <div className=\"flex justify-center mb-4 \">\n        <Timer onChange={handleDelayChange} />\n      </div>\n      <div className=\"flex justify-center mb-4 md:justify-end\">\n        <Count value={count} max={maxNoteCount} onChange={handleCountChange} />\n      </div>\n    </>\n  );\n});\n","// does not mutate due to magic destructure in params ([...arr])\nexport const shuffle = ([...arr]) => {\n  let m = arr.length;\n\n  while (m) {\n    const i = Math.floor(Math.random() * m--);\n    [arr[m], arr[i]] = [arr[i], arr[m]];\n  }\n\n  return arr;\n};\n","import {\n  CIRCLE_OF_FIFTHS,\n  CIRCLE_OF_FIFTHS_FLATS,\n  CIRCLE_OF_FIFTHS_SHARPS,\n  FLAT_NOTES,\n  INVERSION_GROUPS,\n  NATURAL_NOTES,\n  SHARP_NOTES,\n  NoteSetFilter,\n} from '../consts';\n\nimport { shuffle } from './shuffle';\n\nexport type NoteSetConfig = {\n  filter?: NoteSetFilter;\n  count?: number;\n  randomize?: boolean;\n};\n\nexport const getOctaveSet = ({ flats = false, sharps = false, minors = false } = {}) => {\n  let notes: string[] = [...NATURAL_NOTES];\n\n  if (flats) notes = [...NATURAL_NOTES, ...FLAT_NOTES];\n  if (sharps) notes = [...NATURAL_NOTES, ...SHARP_NOTES];\n  if (minors) notes = notes.map((n) => (Math.random() >= 0.6 ? n + 'm' : n));\n\n  return notes;\n};\n\nexport const getRandomSet = ({ minors = false } = {}) => {\n  const useFlats = Math.random() >= 0.5;\n  return getOctaveSet({ flats: useFlats, sharps: !useFlats, minors });\n};\n\nexport const getInversionSets = () => [...INVERSION_GROUPS];\n\nexport const getFifthsSet = ({ flats = false, sharps = false } = {}) => {\n  if (flats) return [...CIRCLE_OF_FIFTHS_FLATS];\n  if (sharps) return [...CIRCLE_OF_FIFTHS_SHARPS];\n  return [...CIRCLE_OF_FIFTHS];\n};\n\nexport const getNoteSet = (key: NoteSetFilter) => {\n  switch (key) {\n    case 'any':\n      return shuffle(getRandomSet());\n    case 'any-add-minor':\n      return shuffle(getRandomSet({ minors: true }));\n    case 'naturals':\n      return shuffle(getOctaveSet());\n    case 'flats':\n      return shuffle(getOctaveSet({ flats: true }));\n    case 'sharps':\n      return shuffle(getOctaveSet({ sharps: true }));\n    case 'inversions':\n      return getInversionSets().flatMap((set) => shuffle(set));\n    case 'fifths':\n      return getFifthsSet({});\n    case 'fifths-flats':\n      return getFifthsSet({ flats: true });\n    case 'fifths-sharps':\n      return getFifthsSet({ sharps: true });\n  }\n};\n\nexport const getNotes = ({ filter = 'any', count = 6 }: NoteSetConfig = {}): string[] => {\n  return getNoteSet(filter).slice(0, count);\n};\n","import React, { useCallback, useState } from 'react';\nimport { useWindowSize, useInterval } from 'react-use';\n\nimport { DEFAULT_NOTES_COUNT, DEFAULT_NOTES_FILTER, NoteSetFilter } from './consts';\nimport { Notes } from './components/Notes';\nimport { Settings } from './components/Settings';\n\nimport { getNotes } from './utils/noteHelpers';\n\nconst App = () => {\n  const windowSize = useWindowSize();\n  const [count, setCount] = useState(DEFAULT_NOTES_COUNT);\n  const [filter, setFilter] = useState<NoteSetFilter>(DEFAULT_NOTES_FILTER);\n  const [notes, setNotes] = useState(getNotes({ filter, count }));\n\n  // null pauses timer\n  const [timerDelay, setTimerDelay] = useState<number | null>(null);\n\n  const changeNotes = useCallback(\n    (overrides = {}) => setNotes(getNotes({ filter, count, ...overrides })),\n    [filter, count, setNotes]\n  );\n\n  const handleTap = useCallback(() => {\n    if (timerDelay !== null) {\n      // force interval to reset by adding 1ms in case value was the same\n      setTimerDelay(timerDelay + 1);\n    }\n    changeNotes();\n  }, [changeNotes, timerDelay, setTimerDelay]);\n\n  useInterval(changeNotes, timerDelay);\n\n  return (\n    <div className=\"flex flex-col bg-gray-900\" style={{ height: windowSize.height }}>\n      <div className=\"flex-1 w-full max-w-6xl p-4 mx-auto select-none\" onClick={handleTap}>\n        <Notes notes={notes} />\n      </div>\n      <div className=\"my-4 text-sm italic text-center text-gray-100 opacity-25\">\n        Tap screen to refresh notes\n      </div>\n      <div className=\"grid grid-rows-3 px-4 pt-4 bg-gray-300 md:grid-cols-3 md:grid-rows-1\">\n        <Settings\n          count={count}\n          filter={filter}\n          setFilter={setFilter}\n          setTimerDelay={setTimerDelay}\n          setCount={setCount}\n          changeNotes={changeNotes}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\ntype SwConfig = {\n  onUpdate: (registration: ServiceWorkerRegistration) => void;\n  onSuccess: (registration: ServiceWorkerRegistration) => void;\n};\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config: SwConfig) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: SwConfig) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: SwConfig) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}